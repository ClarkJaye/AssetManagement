@model IEnumerable<AssetManagement.Models.LaptopInventory>

@{
    ViewData["Title"] = "Inactive";
}

<div class="mx-4">
    <h4>Deleted Items </h4>
    @if (TempData["Welcome"] != null)
    {
        <div class="toast-notification animated-toast">
            <p>@TempData["Welcome"]</p>
        </div>
    }

    <div class="mb-2">
        <a class="btn btn-sm btn-secondary text-white" asp-action="Index">Back to Lists</a>
    </div>

    <hr />

    <!-- Action Buttons -->
    <div class="mb-2">
        <button type="button" class="multi-delete-button btn btn-sm btn-danger disabled" data-bs-toggle="modal" data-bs-target="#deleteModal">
            <span class="fas fa-ban"></span> Retrieve Selected
        </button>
    </div>


   @*  <!-- Action Buttons -->
    <div class="d-flex align-items-center justify-content-between gap-2 mb-2">
        <div>
            <button type="button" class="multi-delete-button btn btn-sm btn-danger disabled" data-bs-toggle="modal" data-bs-target="#deleteModal">
                <span class="fas fa-ban"></span> Retrieve Selected
            </button>
        </div>
        <div class="d-flex align-items-center gap-2">
            <input type="text" class="form-control" id="filterInput" placeholder="Search..." style="width: 350px;">
        </div>
    </div>
 *@




    <form class="mt-3" method="post" action="@Url.Action("Retrieve", "LaptopInventories")">
        <!-- Delete Confirmation Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to Retrieve the selected item(s)?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Retrieve</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-datatable">
                <thead>
                    <tr>
                        <th class="text-center">
                            <input type="checkbox" id="select-all-checkbox" class="custom-checkbox" />
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.laptoptinvCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateCreated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateUpdated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Level)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Brand)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Model)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CPU)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HardDisk)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Memory)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OS)
                        </th>
                        <th hidden>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Createdby)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Updatedby)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" name="selectedIds" id="select-all-checkbox" class="custom-checkbox" value="@item.laptoptinvCode" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.laptoptinvCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateUpdated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Level.LevelDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Brand.BrandDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Model.ModelDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CPU.CPUDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.HardDisk.HDDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Memory.MemoryDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OS.OSDescription)
                            </td>
                            <td hidden>
                                @Html.DisplayFor(modelItem => item.Status.status_code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Createdby.UserCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Updatedby.UserCode)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

    </form>

</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Select/Deselect All Checkboxes Logic
        const selectAllCheckbox = document.getElementById("select-all-checkbox");
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="selectedIds"]');
        selectAllCheckbox.addEventListener("change", function () {
            checkboxes.forEach(cb => cb.checked = selectAllCheckbox.checked);
            toggleDeleteButton();
        });

        checkboxes.forEach(cb => {
            cb.addEventListener("change", toggleDeleteButton);
        });

        // Enable/Disable Delete Button Based on Selection
        function toggleDeleteButton() {
            const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
            const deleteButton = document.querySelector('.multi-delete-button');
            if (anyChecked) {
                deleteButton.classList.remove('disabled');
            } else {
                deleteButton.classList.add('disabled');
            }
        }



        //FILTERING

        $(document).ready(function () {
            $('#filterInput').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $('tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    });
</script>