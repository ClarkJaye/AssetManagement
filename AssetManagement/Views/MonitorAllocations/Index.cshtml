@model IEnumerable<AssetManagement.Models.MonitorAllocation>

@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Chivo:wght@300;400;500;700&display=swap" />

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">



<div class="m-4 px-1">
    <h4>Monitor Allocation</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }

    @if (@TempData["AlertMessage"] != null)
    {
        <div id="alertMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["AlertMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
</div>

<div class="d-flex align-items-center justify-content-between">
    <div class="d-flex align-items-center gap-2 mb-2 p-4">
        <div class="d-flex align-items-center gap-2">
            <a class="btn btn-outline-red" asp-action="Create">
                <i class="fas fa-pencil-alt"></i>
                <span>Add New</span>
            </a>
            <a class="btn btn-outline-secondary" asp-action="Inactive">
                <span class="fas fa-trash-alt"></span> Show History
            </a>
        </div>
    </div>
    <div class="report-view d-flex flex-column justify-content-end">
        <div class="report-item">
            <span class="report-label">Total <span class="text-success">Allocated</span> Monitors:</span>
            <span class="report-value">
                @if (ViewBag.TotalActive != null)
                {
                    <text>@ViewBag.TotalActive</text>
                }
                else
                {
                    <text>0</text>
                }
            </span>
        </div>
        <div class="report-item">
            <span class="report-label">Total <span class="text-danger">Not Allocated</span> Monitors:</span>
            <span class="report-value">
                @if (ViewBag.TotalInactive != null)
                {
                    <text>@ViewBag.TotalInactive</text>
                }
                else
                {
                    <text>0</text>
                }
            </span>
        </div>
    </div>
</div>

<hr />

<div class="m-4">
    <div class="mb-3">
        <button type="button" class="multi-delete-button btn btn-sm btn-danger disabled" data-bs-toggle="modal" data-bs-target="#deleteModal">
            <span class="fas fa-trash"></span> Temporary Delete
        </button>
    </div>

    <form method="post" action="@Url.Action("DeleteAsEdit", "MonitorAllocations")">
        <!-- Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete the selected item(s)?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-datatable">
                <thead>
                    <tr>
                        <th>
                            <div class="d-flex flex-column gap-1">
                                <label for="select-all-checkbox" style="cursor:pointer;">ALL</label>
                                <input type="checkbox" id="select-all-checkbox" class="custom-checkbox" />
                            </div>
                        </th>
                        <th>
                            Alloc ID
                        </th>
                        <th>
                            DESKTOP CODE
                        </th>
                        <th>
                            DESCRIPTION
                        </th>
                        <th>
                            SERIAL NUMBER
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FixedassetTag)
                        </th>
                        <th>PO</th>
                        <th>
                            @Html.DisplayNameFor(model => model.Owner)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateDeployed)
                        </th>                  
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                       
                        <th>
                            @Html.DisplayNameFor(model => model.DateCreated)
                        </th>
                        <th>
                            CREATED BY
                        </th>
                    
                        <th>
                            @Html.DisplayNameFor(model => model.DateUpdated)
                        </th>
                        <th>
                            UPDATED BY
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" name="selectedIds" value="@item.AllocId" class="item-checkbox custom-checkbox" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AllocId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MonitorDetails.MonitorInventory.monitorCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MonitorDetails.MonitorInventory.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MonitorDetails.SerialNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FixedassetTag)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MonitorDetails.PO)
                            </td>                           
                            <td>
                                @Html.DisplayFor(modelItem => item.Owner.OwnerCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateDeployed)
                            </td>
                            @{
                                if (item.MonitorDetails.PurchaseDate <= DateTime.Now.AddMonths(-72))
                                {
                                    <td style="color:red; font-weight:bold; font-size:12px;">
                                        @Html.DisplayFor(modelItem => item.Status.status_name)
                                    </td>
                                }
                                else if (item.MonitorDetails.PurchaseDate <= DateTime.Now.AddMonths(-24))
                                {
                                    <td style="color:darkgreen; font-weight:bold; font-size:12px;">
                                        @Html.DisplayFor(modelItem => item.Status.status_name)
                                    </td>
                                }
                                else if (item.MonitorDetails.PurchaseDate <= DateTime.Now.AddMonths(-48))
                                {
                                    <td style="color:orange; font-weight:bold; font-size:12px;">
                                        @Html.DisplayFor(modelItem => item.Status.status_name)
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Status.status_name)
                                    </td>
                                }
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Createdby.UserFullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateUpdated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Updatedby.UserFullName)
                            </td>
                            <td>
                                <a class="btn btn-sm btn-outline-secondary" asp-action="Create" asp-controller="ReturnMTAs" asp-route-id="@item.AllocId">Return </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>
</div>

<div class="displaytable"> </div>



@if (TempData["ErrorMessage"] != null)
{
    <script>
        alert('@TempData["ErrorMessage"]');
    </script>
}

@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const selectAllCheckbox = document.getElementById("select-all-checkbox");
        const checkboxes = document.querySelectorAll('input[name="selectedIds"]');
        const deleteButtonContainer = document.querySelector('.multi-delete-button');

        selectAllCheckbox.addEventListener("change", function () {
            checkboxes.forEach(cb => cb.checked = selectAllCheckbox.checked);
            toggleDeleteButton();
        });

        checkboxes.forEach(cb => {
            cb.addEventListener("change", toggleDeleteButton);
        });

        function toggleDeleteButton() {
            const isAnyChecked = Array.from(checkboxes).some(cb => cb.checked);
            deleteButtonContainer.classList.toggle('disabled', !isAnyChecked);
        }

        // Loop through each row in the table body
        $("tbody tr").each(function () {
            var quantity = parseInt($(this).find("#qty").text());
            var allocated = parseInt($(this).find("#alloc").text());
            var available = quantity - allocated;

            $(this).find(".available-column").text(available);
        });


        //MODAL
        $(document).on("click", ".editbtn", function () {
            var userCode = $(this).attr("id");

            $.ajax({
                url: "@Url.Action("seeDetails", "MonitorNewAllocs")",
                type: "GET",
                data: { userCODE: userCode },
                success: function (res) {
                    $(".displaytable").html(res);
                }
            });
        });
    });
</script>
