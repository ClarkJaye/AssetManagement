@model IEnumerable<AssetManagement.Models.LaptopBorrowed>

@{
    ViewData["Title"] = "Laptop Borrowed";
}


<div class="m-4 px-1">
    <h4>Borrowed Laptop</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }


    @if (@TempData["AlertMessage"] != null)
    {
        <div id="alertMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["AlertMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Action Buttons -->
    <div class="d-flex align-items-center gap-2 mb-2">
        <div>
            <a id="createbtn" class="btn btn-outline-red" asp-action="LapInvPartialView">
                <span class="fas fa-pencil-alt"> Add Borrow</span>
            </a>
        </div>
        <div>
            <a class="btn btn-outline-secondary" asp-action="Inactive">
                <span class="fas fa-undo"></span> Returned
            </a>
        </div>
    </div>

    <hr />

    <div class="table-responsive">
        <table class="table table-striped table-datatable">
            <thead>
                <tr>
                    <th>
                        LAPTOP CODE
                    </th>
                    <th>
                        SERIAL NUMBER
                    </th>
                    <th>
                        COMPUTER NAME
                    </th>
                    <th>
                        DEPARTMENT BORROWER
                    </th>
                    <th>
                        BORROWER NAME
                    </th>
                    <th>
                        DATE OF BORROWED
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Remark)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateCreated)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateUpdated)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.LaptopInventory.laptoptinvCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SerialNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ComputerName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Department.Dept_name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Owner.OwnerFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateBorrow)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Remark)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateCreated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateUpdated)
                        </td>
                        <td>
                            <form asp-action="Delete" method="post" class="delete-form">
                                <!-- Modal -->
                                <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                Are you sure you want to return this item?
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <button type="submit" class="btn btn-primary">Return</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <input type="hidden" name="id" value="@item.BorrowedID" />
                                <a class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">Return</a>

                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>

</div>



@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}

@if (TempData["ErrorNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Error',
                text: '@TempData["ErrorNotification"]',
                icon: 'error',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>


</script>