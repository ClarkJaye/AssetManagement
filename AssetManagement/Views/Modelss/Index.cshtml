@model IEnumerable<AssetManagement.Models.Model>

@{
    ViewData["Title"] = "Index";

}


<div class="mx-4">
    <h4>Model</h4>
    @if (TempData["Welcome"] != null)
    {
        <div class="toast-notification animated-toast">
            <p>@TempData["Welcome"]</p>
        </div>
    }

    <div class="createform"></div>

</div>
<div class="d-flex align-items-center gap-2 mb-2 p-4">
    <div class="d-flex align-items-center gap-2">
        <a id="createbtn" class="btn btn-theme createbtn">
            <i class="fas fa-pencil-alt"></i>
            <span>Add New</span>
        </a>
        <a class="btn btn-outline-secondary" asp-action="InactiveModel">
            <span class="fas fa-undo"></span> Retrieve Data
        </a>
    </div>
</div>


<div class="mx-4">
    <div class="card shadow-sm card-selected">
        <div class="card-body">
            <div class="table-container table-responsive">
                <table class="table table-striped table-datatable">
                    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ModelDescription)
            </th>
                <th hidden>
                @Html.DisplayNameFor(model => model.ModelStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModelCreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModelCreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModelUpdatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModelUpdatedDate)
            </th>
                            <th style="text-align: center!important;">ACTION</th>
            </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ModelDescription)
            </td>
                    <td hidden>
                @Html.DisplayFor(modelItem => item.ModelStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModelCreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModelCreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModelUpdatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModelUpdatedDate)
            </td>
            <td>
                <div class="d-flex justify-content-center align-items-center gap-3">
                    <a class="btn btn-outline-primary editbtn" data-id="@item.ModelId">Edit</a>
                    <form asp-action="Delete" method="post" class="delete-form">
                        <input type="hidden" name="id" value="@item.ModelId" />
                        <a class="btn btn-outline-danger btn-delt">Delete</a>
                    </form>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>
            </div>
        </div>
    </div>
</div>



@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}

@if (TempData["AlertMessage"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Error',
                text: '@TempData["AlertMessage"]',
                icon: 'error',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}


<script>
    document.addEventListener("DOMContentLoaded", function () {
        $(".btn-delt").click(function () {
            $(this).closest("form").submit();
        })

        $("#createbtn").click(function () {
            $(this).hide();
            $('.card, .title ,.btn').hide();

            $.ajax({
                url: "@Url.Action("Create","Modelss")",
                type: "GET",
                success: function (res) {
                    $(".createform").html(res);
                }
            })
        })

        $(".editbtn").click(function () {
            $(".createbtn ,.retbtn").hide();
            var id = $(this).data("id");

            // Remove the 'highlighted-row' class from any other row
            $("tr.highlighted-row").removeClass("highlighted-row");

            // Add the 'highlighted-row' class to the clicked row
            $(this).closest("tr").addClass("highlighted-row");

            $.ajax({
                url: "@Url.Action("Edit","Modelss")",
                type: "GET",
                data: { id: id },
                success: function (res) {
                    $(".createform").html(res);
                }
            })
        })
    })

    //FILTERING

    $(document).ready(function () {
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>
