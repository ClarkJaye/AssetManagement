@model IEnumerable<AssetManagement.Models.DesktopNewAlloc>

@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Chivo:wght@300;400;500;700&display=swap" />

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18"></script>
<style>

    *,
    *::before,
    *::after {
        box-sizing: border-box;
        -webkit-box-sizing: border-box;
    }

    body {
        font-family: 'Chivo', sans-serif;
        margin: 0;
        padding: 10px;
        overflow: hidden;
    }

    /* Add this CSS to adjust the top margin of the layout container */
    .container {
        margin-top: 70px; /* Adjust this value according to your navbar height */
    }

    td {
        cursor: pointer;
    }

</style>
<h2>New Desktop Owner</h2>

@if (TempData["Welcome"] != null)
{
    <div class="toast-notification animated-toast">
        <p>@TempData["Welcome"]</p>
    </div>
}
<p>
    <a id="createbtn" class="bg-success h5 text-white text-decoration-none p-2 btn createbtn" asp-action="DeskAllocPartialView" asp-controller="DesktopAllocations">Create</a>
    <a class="btn btn-sm bg-secondary h5 text-white text-decoration-none p-2 btn createbtn" asp-action="Inactive">Show Deleted</a>
</p>
<input type="text" id="filterInput" placeholder="Search...">
<form method="post" action="@Url.Action("DeleteAsEdit", "DesktopNewAllocs")">
    <!-- Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the selected item(s)?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
    <div class="table-container">
<table class="table">
    <thead>
        <tr>
            <th hidden>
                @Html.DisplayNameFor(model => model.SecAllocId)
            </th>
            <th>
                ID
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Owner)
            </th>
            <th>
                COMPUTER NAME
            </th>
            <th>
                CODE
            </th>
            <th>
                PO
            </th>
            <th>
               UNIT TAG
            </th>
            <th>
               DESCRIPTION
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateUpdated)
            </th>
            <th >
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Createdby)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updatedby)
            </th>
            <th>
                <input type="checkbox" id="select-all-checkbox" class="green-checkbox" />
            </th>
            <th>
                <button type="button" class="btn btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal">
                    <span id="boot-icon" class="bi bi-trash-fill"></span>
                </button>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.SecAllocId)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.DesktopAllocation.AllocId)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.Owner.OwnerFullName)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.DesktopAllocation.ComputerName)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.DesktopAllocation.DesktopCode)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.InventoryDetails.PO)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.DesktopAllocation.UnitTag)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.DesktopInventory.Description)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.DateUpdated)
                </td>
                    @{
                        if (item.InventoryDetails.PurchaseDate <= DateTime.Now.AddMonths(-72))
                        {
                            <td style="color:red; font-weight:bold; font-size:12px;">
                                @Html.DisplayFor(modelItem => item.Status.status_name)
                            </td>
                        }
                            else if (item.InventoryDetails.PurchaseDate <= DateTime.Now.AddMonths(-24))
                        {
                            <td style="color:darkgreen; font-weight:bold; font-size:12px;">
                                @Html.DisplayFor(modelItem => item.Status.status_name)
                            </td>
                        }
                            else if (item.InventoryDetails.PurchaseDate <= DateTime.Now.AddMonths(-48))
                        {
                            <td style="color:orange; font-weight:bold; font-size:12px;">
                                @Html.DisplayFor(modelItem => item.Status.status_name)
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.Status.status_name)
                            </td>
                        }
                    }
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.Createdby.UserFullName)
                </td>
                <td class=" editbtn" id="@item.DesktopInventory.Description" id="userCode2" name="userCODE">
                    @Html.DisplayFor(modelItem => item.Updatedby.UserFullName)
                </td>
                <td>
                    <input type="checkbox" name="selectedIds" id="select-all-checkbox" class="green-checkbox" value="@item.SecAllocId" />
                </td>
                <td>
                    <a class="btn btn-sm bg-secondary  text-white custom-fontsize editbtn" asp-action="CreateSecReturn" asp-controller="ReturnDTAs" asp-route-id="@item.AllocId">Return </a>
                </td>
            </tr>
        }
    </tbody>
</table>
    </div>
</form>
<div class="displaytable"> </div>

@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}



<script>
    const selectAllCheckbox = document.getElementById("select-all-checkbox");

    const checkboxes = document.querySelectorAll('input[type="checkbox"][name="selectedIds"]');



    selectAllCheckbox.addEventListener("change", function () {

        for (let i = 0; i < checkboxes.length; i++) {

            checkboxes[i].checked = selectAllCheckbox.checked;

        }

    });
    //FILTERING

    $(document).ready(function () {
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });



    //MODAL

    $(document).ready(function () {
        $(document).on("click", ".editbtn", function () {
            var userCode = $(this).attr("id");

            $.ajax({
                url: "@Url.Action("seeDetails", "DesktopNewAllocs")",
                type: "GET",
                data: { userCODE: userCode },
                success: function (res) {
                    $(".displaytable").html(res);
                }
            });
        });
    });

</script>