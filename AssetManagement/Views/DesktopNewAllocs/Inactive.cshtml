@model IEnumerable<AssetManagement.Models.DesktopNewAlloc>

@{
    ViewData["Title"] = "Index";
}




<div class="m-4 px-1">
    <h4>Deleted Items</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }


    <div class="mb-2">
        <a class="btn btn-sm btn-outline-secondary" asp-controller="DesktopNewAllocs" asp-action="Index">Back to Lists</a>
    </div>

    <hr />
    <!-- Action Buttons -->
    <div class="d-flex align-items-center justify-content-end gap-2 mb-2">
        <div class="d-flex align-items-center gap-2">
            <input type="text" class="form-control" id="filterInput" placeholder="Search..." style="width: 350px;">
        </div>
    </div>


    <form method="post" action="@Url.Action("Retrieve", "DesktopNewAllocs")">
        <!-- Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to Retrieve the selected item(s)?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Retrieve</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive">

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th hidden>
                            @Html.DisplayNameFor(model => model.SecAllocId)
                        </th>
                        <th>
                            ID
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Owner)
                        </th>
                        <th>
                            COMPUTER NAME
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.InventoryDetails)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateCreated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateUpdated)
                        </th>
                        <th hidden>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Createdby)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Updatedby)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td hidden>
                                @Html.DisplayFor(modelItem => item.SecAllocId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DesktopAllocation.AllocId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Owner.OwnerFullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DesktopAllocation.ComputerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InventoryDetails.DesktopInventory.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateUpdated)
                            </td>
                            <td hidden>
                                @Html.DisplayFor(modelItem => item.Status.status_code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Createdby.UserCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Updatedby.UserCode)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

    </form>
</div>


<script>
    const selectAllCheckbox = document.getElementById("select-all-checkbox");

    const checkboxes = document.querySelectorAll('input[type="checkbox"][name="selectedIds"]');



    selectAllCheckbox.addEventListener("change", function () {

        for (let i = 0; i < checkboxes.length; i++) {

            checkboxes[i].checked = selectAllCheckbox.checked;

        }

    });
    //FILTERING

    $(document).ready(function () {
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>

