@model IEnumerable<AssetManagement.Models.Vendor>

@{
    ViewData["Title"] = "Inactive Vendor";
}
<style>

    *,
    *::before,
    *::after {
        box-sizing: border-box;
        -webkit-box-sizing: border-box;
    }



    body {
        font-family: 'Chivo', sans-serif;
        margin: 0;
        padding: 10px;
        overflow: hidden;
    }

    /* Add this CSS to adjust the top margin of the layout container */
    .container {
        margin-top: 70px; /* Adjust this value according to your navbar height */
    }

</style>

@if (TempData["Welcome"] != null)
{
    <div class="toast-notification animated-toast">
        <p>@TempData["Welcome"]</p>
    </div>
}



<div class="table-container">
    <h4 class="title">Inactive Vendor</h4>
    <input type="text" id="filterInput" placeholder="Search...">
    <table class="table custom-fontsize p-4 ">
        <thead >
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.VendorName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VendorAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VCreatedby)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VUpdateby)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateUpdated)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VCreatedby)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VUpdateby)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateUpdated)
                    </td>
                    <td class="d-flex flex-row gap-2">
                        <a class="btn btn-sm bg-success text-white custom-fontsize btn-activate" asp-action="Activate" asp-route-id="@item.VendorID" data-id="@item.VendorID">Activate</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    //FILTERING

    $(document).ready(function () {
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

</script>
