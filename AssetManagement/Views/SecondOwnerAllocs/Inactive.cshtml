@model IEnumerable<AssetManagement.Models.SecondOwnerAlloc>

@{
    ViewData["Title"] = "Index";
}

<div class="mx-4">
    <h4>Deleted Items</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }



    <div class="mb-5">
        <a class="btn btn-sm btn-outline-secondary" asp-controller="SecondOwnerAllocs" asp-action="Index">Back to Lists</a>
    </div>


    <hr />


    <div class="mb-2">
        <button type="button" class="multi-delete-button btn btn-sm btn-danger disabled" data-bs-toggle="modal" data-bs-target="#deleteModal">
            <span class="fas fa-ban"></span> Retrieve Selected
        </button>
    </div>

    <form method="post" action="@Url.Action("Retrieve", "SecondOwnerAllocs")">
        <!-- Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to Retrieve the selected item(s)?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Retrieve</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow-sm card-selected">
            <div class="card-body">
                <div class="table-container">
                    <table class="table table-striped table-datatable">
                        <thead>
                            <tr>
                               @*  <th class="text-center">
                                    <input type="checkbox" id="select-all-checkbox" class="custom-checkbox" />
                                </th> *@
                                <th>LAPTOP CODE</th>
                                <th>SERIAL NUMBER</th>
                                <th>DESCRIPTION</th>
                                <th>ASSET TAG</th>
                                <th>COMPUTER NAME</th>
                                <th>PO</th>
                                <th>@Html.DisplayNameFor(model => model.Owner)</th>
                                <th>@Html.DisplayNameFor(model => model.LaptopAllocation.LaptopInventoryDetails.DeployedDate)</th>
                                <th>@Html.DisplayNameFor(model => model.LaptopAllocation.AllocationStatus)</th>
                                <th>@Html.DisplayNameFor(model => model.DateCreated)</th>
                                <th>@Html.DisplayNameFor(model => model.Createdby)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    @* <td class="text-center">
                                        <input type="checkbox" name="selectedIds" id="select-all-checkbox" class="custom-checkbox" value="@item.SecAllocId" />
                                    </td> *@
                                    <td class="text-center">
                                        <input type="checkbox" name="selectedIds" value="@item.SecAllocId" class="item-checkbox custom-checkbox" />
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.laptoptinvCode)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.LaptopAllocation.SerialNumber)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.LaptopAllocation.FixedassetTag)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.LaptopAllocation.LaptopInventoryDetails.ComputerName)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.LaptopAllocation.LaptopInventoryDetails.PO)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.Owner.OwnerFullName)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.LaptopAllocation.LaptopInventoryDetails.DeployedDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Status.status_name)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.DateCreated)
                                    </td>
                                    <td class=" editbtn" id="@item.LaptopAllocation.LaptopInventoryDetails.LaptopInventory.Description" name="userCODE">
                                        @Html.DisplayFor(modelItem => item.Createdby.UserFullName)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </form>
</div>




<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Select/Deselect All Checkboxes Logic
        const selectAllCheckbox = document.getElementById("select-all-checkbox");
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="selectedIds"]');
        selectAllCheckbox.addEventListener("change", function () {
            checkboxes.forEach(cb => cb.checked = selectAllCheckbox.checked);
            toggleDeleteButton();
        });

        checkboxes.forEach(cb => {
            cb.addEventListener("change", toggleDeleteButton);
        });

        // Enable/Disable Delete Button Based on Selection
        function toggleDeleteButton() {
            const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
            const deleteButton = document.querySelector('.multi-delete-button');
            if (anyChecked) {
                deleteButton.classList.remove('disabled');
            } else {
                deleteButton.classList.add('disabled');
            }
        }

        //FILTERING
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });


    });
</script>
