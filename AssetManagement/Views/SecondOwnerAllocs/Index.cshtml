@model IEnumerable<AssetManagement.Models.SecondOwnerAlloc>

@{
    ViewData["Title"] = "Second Owner";
}

<div class="m-4 px-1">
    <h4>Laptop Second Owner</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }
</div>

@if (@TempData["AlertMessage"] != null)
{
    <div id="alertMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["AlertMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<!-- Action Buttons -->
<div class="d-flex align-items-center gap-2 mb-2 mx-2 p-4">
    <div class="d-flex align-items-center gap-2">
        <a asp-controller="LaptopAllocations" asp-action="LapAllocPartialView" class="btn btn-outline-red">
            <i class="fas fa-pencil-alt"></i>
            <span>Create New</span>
        </a>
        <a class="btn btn-outline-secondary" asp-controller="SecondOwnerAllocs" asp-action="Inactive">
            <span class="fas fa-trash-alt"></span> Show Temporary Deleted
        </a>
    </div>
</div>


<hr />

<div class="mx-4">
    <div class="mb-3">
        <button type="button" class="multi-delete-button btn btn-sm btn-danger disabled" data-bs-toggle="modal" data-bs-target="#deleteModal">
            <span class="fas fa-ban"></span> Temporary Delete
        </button>
    </div>

    <form method="post" action="@Url.Action("DeleteAsEdit", "SecondOwnerAllocs")">
        <!-- Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete the selected item(s)?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="table-responsive">

            <table id="secOwnerTable" class="table">
                <thead>
                    <tr>
                        <th>
                            <div class="d-flex flex-column gap-1">
                                <label for="select-all-checkbox" style="cursor:pointer;">ALL</label>
                                <input type="checkbox" id="select-all-checkbox" class="custom-checkbox" />
                            </div>
                        </th>
                        <th hidden>
                            @Html.DisplayNameFor(model => model.SecAllocId)
                        </th>
                        <th>
                            ID
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Owner)
                        </th>
                        <th>
                            COMPUTER NAME
                        </th>
                        <th>
                            CODE
                        </th>
                        <th>
                            PO
                        </th>
                        <th>
                            SERIAL
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LaptopInventory)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateCreated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateUpdated)
                        </th>
                        <th hidden>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Createdby)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Updatedby)
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" name="selectedIds" value="@item.SecAllocId" class="item-checkbox custom-checkbox" />
                            </td>
                            <td hidden>
                                @Html.DisplayFor(modelItem => item.SecAllocId)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.LaptopAllocation.AllocId)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.Owner.OwnerFullName)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.LaptopAllocation.ComputerName)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.LaptopAllocation.LaptopCode)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.InventoryDetails.PO)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.LaptopAllocation.SerialNumber)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.LaptopInventory.Description)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.DateUpdated)
                            </td>
                            <td hidden>
                                @Html.DisplayFor(modelItem => item.Status.status_code)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.Createdby.UserFullName)
                            </td>
                            <td class=" editbtn" id="@item.LaptopInventory.Description" name="userCODE">
                                @Html.DisplayFor(modelItem => item.Updatedby.UserFullName)
                            </td>
                            <td>
                                <a class="btn btn-sm btn-secondary" asp-action="CreateSecReturn" asp-controller="ReturnLTAs" asp-route-id="@item.AllocId">Return </a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </form>


    <div class="displaytable"> </div>

</div>

@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const selectAllCheckbox = document.getElementById("select-all-checkbox");
        const checkboxes = document.querySelectorAll('input[name="selectedIds"]');
        const deleteButtonContainer = document.querySelector('.multi-delete-button');

        selectAllCheckbox.addEventListener("change", function () {
            checkboxes.forEach(cb => cb.checked = selectAllCheckbox.checked);
            toggleDeleteButton();
        });

        checkboxes.forEach(cb => {
            cb.addEventListener("change", toggleDeleteButton);
        });

        function toggleDeleteButton() {
            const isAnyChecked = Array.from(checkboxes).some(cb => cb.checked);
            deleteButtonContainer.classList.toggle('disabled', !isAnyChecked);
        }



        // Initialize DataTables
        $('#secOwnerTable').DataTable({
            paging: true,
            lengthChange: true,
            searching: true,
            ordering: true,
            info: true,
            autoWidth: false,
            responsive: true,
            columnDefs: [{ targets: [0, 0], orderable: false }],
            language: {
                paginate: {
                    previous: "Previous", // Change "Previous"
                    next: "Next" // Change "Next"
                }
            }
        });


        //MODAL
        $(document).on("click", ".editbtn", function () {
            var userCode = $(this).attr("id");
            console.log(userCode)

            $.ajax({
                url: "@Url.Action("seeDetails", "SecondOwnerAllocs")",
                type: "GET",
                data: { userCODE: userCode },
                success: function (res) {
                    $(".displaytable").html(res);
                }
            });
        });
    });

</script>


