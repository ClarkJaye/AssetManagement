@model IEnumerable<AssetManagement.Models.DesktopInventory>

@{
    ViewData["Title"] = "Desktop Inventory";
}

<div class="m-4 px-1">
    <h4>Dekstop Inventory</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }
</div>


<div class="d-flex align-items-center justify-content-between">
    <!-- Action Buttons -->
    <div class="d-flex align-items-center gap-2 mb-2 p-4">
        <div class="d-flex align-items-center gap-2">
            <a class="btn btn-outline-red" asp-controller="DesktopInventories" asp-action="Create">
                <i class="fas fa-pencil-alt"></i>
                <span>Create New</span>
            </a>
            <a class="btn btn-outline-secondary" asp-controller="DesktopInventories" asp-action="Inactive">
                <span class="fas fa-trash-alt"></span> Show Temporary Deleted
            </a>
        </div>
    </div>
    <!-- Total -->
    <div class="report-view d-flex flex-column justify-content-end">
        <div class="report-item">
            <span class="report-label">Total <span class="text-success">Available</span> Desktops:</span>
            <span class="report-value">
                @if (ViewBag.TotalAvailableDT != null)
                {
                    <text>@ViewBag.TotalAvailableDT</text>
                }
                else
                {
                    <text>0</text>
                }
            </span>
        </div>
        <div class="report-item">
            <span class="report-label">Total <span class="text-danger">Not Available</span> Desktops:</span>
            <span class="report-value">
                @if (ViewBag.TotalAllocatedDT != null)
                {
                    <text>@ViewBag.TotalAllocatedDT</text>
                }
                else
                {
                    <text>0</text>
                }
            </span>
        </div>
    </div>
</div>

<hr />

<div class=" m-4">
    <div class="mb-3">
        <button type="button" class="multi-delete-button btn btn-sm btn-danger disabled" data-bs-toggle="modal" data-bs-target="#deleteModal">
            <span class="fas fa-trash"></span> Temporary Delete
        </button>
    </div>

    <form method="post" action="@Url.Action("DeleteAsEdit", "DesktopInventories")">
        <!-- Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete the selected item(s)?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-datatable">
                <thead>
                    <tr>
                        <th>
                            <div class="d-flex flex-column gap-1">
                                <label for="select-all-checkbox" style="cursor:pointer;">ALL</label>
                                <input type="checkbox" id="select-all-checkbox" class="custom-checkbox" />
                            </div>
                        </th>
                        <th>
                            CODE
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            QUANTITY
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AllocatedNo)
                        </th>
                        <th>
                            AVAILABLE
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Level)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Brand)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Model)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MainBoard)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CPU)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.GraphicsCard)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HardDisk)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Memory)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OS)
                        </th>           
                        <th>
                            @Html.DisplayNameFor(model => model.DateCreated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Createdby)
                        </th>
                       
                        <th>
                            @Html.DisplayNameFor(model => model.DateUpdated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Updatedby)
                        </th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" name="selectedIds" value="@item.desktopInvCode" class="item-checkbox custom-checkbox" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.desktopInvCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td id="qty">
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td id="alloc">
                                @Html.DisplayFor(modelItem => item.AllocatedNo)
                            </td>
                            <td class="available-column">
                                Available
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Level.LevelDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Brand.BrandDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Model.ModelDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MainBoard.BoardDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CPU.CPUDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.GraphicsCard.GraphicsDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.HardDisk.HDDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Memory.MemoryDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OS.OSDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Createdby.UserCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateUpdated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Updatedby.UserCode)
                            </td>
                            <td>
                                <a class="btn btn-sm btn-outline-red" asp-action="Create" asp-controller="DesktopInventoryDetails" asp-route-id="@item.desktopInvCode">Add</a>
                            </td>
                            <td>
                                <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-controller="DesktopInventories" asp-route-id="@item.desktopInvCode">Edit</a>
                            </td>
                            <td>
                                <a class="btn btn-sm btn-outline-success" asp-action="SeeAll" asp-route-id="@item.desktopInvCode" asp-route-ids="@item.Description">View</a>
                            </td>
                            <td>
                                <a class="btn btn-sm btn-outline-secondary" asp-action="InventoryDetails" asp-route-id="@item.desktopInvCode" asp-route-ids="@item.Description">Tracking</a>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </form>

</div>


@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}
@if (TempData["ErrorNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Error',
                text: '@TempData["ErrorNotification"]',
                icon: 'error',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const selectAllCheckbox = document.getElementById("select-all-checkbox");
        const checkboxes = document.querySelectorAll('input[name="selectedIds"]');
        const deleteButtonContainer = document.querySelector('.multi-delete-button');

        selectAllCheckbox.addEventListener("change", function () {
            checkboxes.forEach(cb => cb.checked = selectAllCheckbox.checked);
            toggleDeleteButton();
        });

        checkboxes.forEach(cb => {
            cb.addEventListener("change", toggleDeleteButton);
        });

        function toggleDeleteButton() {
            const isAnyChecked = Array.from(checkboxes).some(cb => cb.checked);
            deleteButtonContainer.classList.toggle('disabled', !isAnyChecked);
        }


        // Loop through each row in the table body
        $("tbody tr").each(function () {
            var quantity = parseInt($(this).find("#qty").text());
            var allocated = parseInt($(this).find("#alloc").text());
            var available = quantity - allocated;

            $(this).find(".available-column").text(available);
        });
    });
</script>