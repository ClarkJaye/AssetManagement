@model IEnumerable<AssetManagement.Models.Ups>

@{
    ViewData["Title"] = "UPS";
}

<div class="m-4 px-1">
    <h4>Uninterruptible Power Supply</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }
</div>

@if (@TempData["AlertMessage"] != null)
{
    <div id="alertMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["AlertMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}



<hr />

<div class=" m-4 rendb">

    <form method="post" action="@Url.Action("DeleteAsEdit", "Ups")">
        <!-- Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete the selected item(s)?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="d-flex align-items-center justify-content-between gap-2 mb-2 mx-2">
            <div>
                <button type="button" class="multi-delete-button btn btn-sm btn-danger disabled" data-bs-toggle="modal" data-bs-target="#deleteModal">
                    <span class="fas fa-ban"></span> Temporary Delete
                </button>
            </div>
            <div class="d-flex align-items-center gap-2">
                <a class="btn btn-theme" asp-action="Create">
                    <i class="fas fa-pencil-alt"></i>
                    <span>Create New</span>
                </a>
                <a class="btn btn-outline-secondary" asp-action="Inactive">
                    <span class="fas fa-trash-alt"></span> Show Temporary Deleted
                </a>
            </div>
        </div>

        <div class="card shadow-sm card-selected">
            <div class="card-body">
                <div class="table-container table-responsive">
                    <table class="table table-striped table-datatable">
                        <thead>
                            <tr>
                                <th>
                                    <div class="d-flex align-items-center flex-column gap-1">
                                        <Label for="select-all-checkbox" style="cursor:pointer;">ALL</Label>
                                        <input type="checkbox" id="select-all-checkbox" class="custom-checkbox" />
                                    </div>
                                </th>
                                <th>
                                    @* <button type="button" class="btn btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                    <span id="boot-icon" class="bi bi-trash-fill"></span>
                                    </button> *@
                                    ACTION
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_store)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_code)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_serial)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_warranty)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_validity)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_iovoltage)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_dcvoltage)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_idealload)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_currentload)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_dtinstalled)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_serviceyrs)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_lastpmdt)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_battrepcount)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_unitserve)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_remarks)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_createddt)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ups_updateddt)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Brand)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Model)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UpsType)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Vendor)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UpsCondition)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UpsBattStatus)
                                </th>
                                <th hidden>
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Createdby)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Updatedby)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="text-center">
                                        <input type="checkbox" name="selectedIds" value="@item.ups_code" class="item-checkbox custom-checkbox" />
                                    </td>
                                    <td>
                                        <a class="btn btn-sm btn-outline-primary editbtn" asp-action="Edit" asp-route-id="@item.ups_code">
                                            <i class="fas fa-pencil-alt"></i>
                                            <span> Edit</span>
                                        </a>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_store)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_code)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_serial)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_warranty)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_validity)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_iovoltage)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_dcvoltage)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_idealload)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_currentload)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_dtinstalled)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_serviceyrs)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_lastpmdt)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_battrepcount)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_unitserve)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_remarks)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_createddt)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ups_updateddt)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Brand.BrandDescription)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Model.ModelDescription)</td>
                                    <td>@Html.DisplayFor(modelItem => item.UpsType.type_description)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Vendor.VendorName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.UpsCondition.condition_description)</td>
                                    <td>@Html.DisplayFor(modelItem => item.UpsBattStatus.status_description)</td>
                                    <td hidden>@Html.DisplayFor(modelItem => item.Status.status_code)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Createdby.UserFullName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Updatedby.UserFullName)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="displaytable"> </div>

@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const selectAllCheckbox = document.getElementById("select-all-checkbox");
        const checkboxes = document.querySelectorAll('input[name="selectedIds"]');
        const deleteButtonContainer = document.querySelector('.multi-delete-button');

        const confirmDeleteButton = document.getElementById("confirmDeleteButton");
        const deleteForm = document.querySelector("form[action*='DeleteAsEdit']");

        confirmDeleteButton.addEventListener("click", function () {
            deleteForm.submit();
        });

        selectAllCheckbox.addEventListener("change", function () {
            checkboxes.forEach(cb => cb.checked = selectAllCheckbox.checked);
            toggleDeleteButton();
        });

        checkboxes.forEach(cb => {
            cb.addEventListener("change", toggleDeleteButton);
        });

        //Enable Delete Button when selct in checkbox
        function toggleDeleteButton() {
            const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
            if (anyChecked) {
                deleteButtonContainer.classList.remove('disabled');
            } else {
                deleteButtonContainer.classList.add('disabled');
            }
        }

    });
</script>
