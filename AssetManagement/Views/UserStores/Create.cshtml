@using AssetManagement.Models.View_Model;
@model UserStoreViewModel

@{
    ViewData["Title"] = "Add User Store";
}


@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["ErrorMessage1"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage1"]</div>
}

<div class="m-4">
    <h4>Add Store</h4>
    <hr />
    <div>
        <form asp-action="Create">
            <div class="row form-group">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group col-md-4" id="leveltable">
                    <select hidden asp-for="UserStore.UserCode" class="form-control" asp-items="ViewBag.UserCode"></select>
                    <label class="control-label">USER FULL NAME</label>
                    <select id="userCode" name="userCODE" class="form-select" asp-items="ViewBag.UserCode">
                        <option selected disabled>Select User</option>
                    </select>
                </div>

                <div class="form-group col-md-4" id="leveltable">
                    <select hidden asp-for="UserStore.StoreCode" class="form-control" asp-items="ViewBag.StoreCode"></select>
                    <label class="control-label">STORE NAME</label>
                    <select id="storeCode" name="StoreCode" class="form-select" asp-items="ViewBag.StoreCode">
                        <option selected disabled>Select Store</option>
                    </select>
                </div>

                <div class="form-group col-md-4" id="partialstoretable">
                    <label hidden asp-for="UserStore.StoreCode" class="control-label"></label>
                    <input hidden asp-for="UserStore.StoreCode" class="form-select" />
                    <label class="control-label"> STORE NAME</label>
                    <input id="StoreName" class="form-control" />
                </div>

                <div class="form-group mt-4 mb-2 col d-flex align-items-center gap-2">
                    <input type="submit" value="Create" class="btn btn-outline-theme" />
                    <a asp-action="Index" asp-controller="UserStores" class="btn btn-outline-secondary">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>


<div class="m-4">
    <div class="table-responsive scrollable-container table-container">

        <table id="patialStoreViewTable" class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.StoreList.FirstOrDefault().Store_code)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StoreList.FirstOrDefault().StoreName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StoreList.FirstOrDefault().Status)
                    </th>
            </thead>
            <tbody style="cursor:pointer;">
                @foreach (var item in Model.StoreList)
                {
                    <tr onclick="fillFormFields('@item.Store_code', '@item.StoreName') ">
                        <td>
                            @Html.DisplayFor(modelItem => item.Store_code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StoreName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.status_name)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        // Initialize DataTables
        $('#patialStoreViewTable').DataTable({
            paging: true,
            lengthChange: true,
            searching: true,
            ordering: true,
            info: true,
            autoWidth: false,
            responsive: true,
            columnDefs: [{ targets: [0, 0], orderable: false }],
            language: {
                paginate: {
                    previous: "Previous",
                    next: "Next"
                }
            }
        });


        function fillFormFields(Store_code, StoreName) {
            document.getElementById("UserStore_StoreCode").value = Store_code;
            document.getElementById("StoreName").value = StoreName;
        }

        // FILTERING
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                var storeName = $(this).find('td:nth-child(2)').text().toLowerCase();
                $(this).toggle(storeName.indexOf(value) > -1);
            });
        });

        // 2 SELECT FUNCTIONALITY
        // Get the initial selected value
        var initialSelectedValue = $("#userCode").val();

        // Set the initial selected value of the hidden select
        $("select[name='UserStore.UserCode']").val(initialSelectedValue);

        $("#userCode").change(function () {
            var selectedValue = $(this).val();

            // Set the selected value of the hidden select
            $("select[name='UserStore.UserCode']").val(selectedValue);
        });



        //AJAX

        $("#userCode").change(function () {
            var userCode = $(this).val();

            $.ajax({
                url: "@Url.Action("UserStoreView", "UserStores")",
                type: "GET",
                data: { userCODE: userCode },
                traditional: true,
                success: function (res) {
                    $(".displaytable").html(res);
                }
            });
        });
    });
</script>





