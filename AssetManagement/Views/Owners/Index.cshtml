@using AssetManagement.Models.View_Model;

@model OwnerViewModel

@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Chivo:wght@300;400;500;700&display=swap" />

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18"></script>
<style>

    *,
    *::before,
    *::after {
        box-sizing: border-box;
        -webkit-box-sizing: border-box;
    }

    body {
        font-family: 'Chivo', sans-serif;
        margin: 0;
        padding: 10px;
        height: 100vh;
        overflow: hidden;
    }
    .buttones {
        margin-top: 10px;
    }
</style>

<h4>Owner</h4>
@if (TempData["Welcome"] != null)
{
    <div class="toast-notification animated-toast">
        <p>@TempData["Welcome"]</p>
    </div>
}


@{
    var alertMessage = TempData["AlertMessage"] as string;
    var alertMessage1 = TempData["AlertMessage1"] as string;
}
@if (!string.IsNullOrEmpty(alertMessage1))
{
    <div class="alert alert-danger" style="background-color: #BF1E25; color:white;">
        @alertMessage1
    </div>
}
@if (!string.IsNullOrEmpty(alertMessage))
{
    <div class="alert alert-danger" style="background-color: #BF1E25; color:white;">
        @alertMessage
    </div>
}

@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}

<div>
    <form asp-action="CreateUpdate">
        <div class="row form-group">
            <div hidden>
                <input name="idCheck" value='@ViewData["ad"]' />
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group col-2">
                <label asp-for="Owner.OwnerCode" class="control-label"></label>
                <input asp-for="Owner.OwnerCode" class="form-control" />
                <span asp-validation-for="Owner.OwnerCode" class="text-danger"></span>
            </div>
            <div class ="form-group col-2">
                <label asp-for="Owner.OwnerFullName" class="control-label"></label>
                <input asp-for="Owner.OwnerFullName" class="form-control" required/>
                <span asp-validation-for="Owner.OwnerFullName" class="text-danger"></span>
            </div>
            <div class="form-group col-2">
                <label asp-for="Owner.OwnerDept" class="control-label"></label>
                <select asp-for="Owner.OwnerDept" class="form-control" asp-items="ViewBag.OwnerDept"></select>
            </div>
            <div class="form-group col-2">
                <label asp-for="Owner.OwnerLocation" class="control-label"></label>
                <select asp-for="Owner.OwnerLocation" class="form-control" asp-items="ViewBag.OwnerLocation"></select>
            </div>
            <div class="form-group col-2">
                <label asp-for="Owner.OwnerOffice" class="control-label"></label>
                <select asp-for="Owner.OwnerOffice" class="form-control" asp-items="ViewBag.OwnerOffice"></select>
            </div>
            <div class="form-group col-2" hidden>
                <label asp-for="Owner.OwnerStatus" class="control-label"></label>
                <select asp-for="Owner.OwnerStatus" class="form-control" asp-items="ViewBag.OwnerStatus"></select>
            </div>
            <div class="form-group col-2" hidden>
                <label asp-for="Owner.OwnerCreated" class="control-label"></label>
                <select asp-for="Owner.OwnerCreated" class="form-control" asp-items="ViewBag.OwnerCreated"></select>
            </div>
            <div class="form-group col-2" hidden>
                <label asp-for="Owner.DateCreated" class="control-label"></label>
                <input asp-for="Owner.DateCreated" class="form-control" />
                <span asp-validation-for="Owner.DateCreated" class="text-danger"></span>
            </div>
            <div class="buttones">
                <input type="submit" value="Save" class="bg-success h5 text-white text-decoration-none p-2 btn createbtn" style="background-color: #106F04;" />
                <a class="btn btn-sm bg-danger h5 text-white text-decoration-none p-2 btn createbtn" asp-action="Cancel">CANCEL</a>
               
            </div>
        </div>
    </form>
</div>
<form method="get" action="@Url.Action("Index", "Owners")">
    <div class="input-group mb-3">
        <input hidden type="text" class="form-control" name="searchString" value="IN">
        <div class="input-group-append">
            <button class="btn  bg-secondary retbtn text-white h5 p-2">Show Deleted</button>
        </div>
    </div>
</form>
<input type="text" id="filterInput" placeholder="Search...">
<form method="post" action="@Url.Action("DeleteAsEdit", "Owners")">
    <!-- Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to Continue this Action for the selected item(s)?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Proceed</button>
                </div>
            </div>
        </div>
    </div>

    <div class="table-responsive scrollable-container table-container">
    <table class="table">               
        <thead>
            <tr>
                <th>
                        <input type="checkbox" id="select-all-checkbox" class="green-checkbox" />
                </th>
                <th>
                    <button type="button" class="btn btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal">
                        <span id="boot-icon" class="bi bi-trash-fill">
                    </button>
                </th>
                <th>
                    <button type="button" class="btn btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal">
                       </span><i class="bi bi-recycle"></i>
                    </button>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.OwnerCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.OwnerFullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.OwnerLocation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.OwnerOffice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.DateCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.DateUpdated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.Createdby)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.Updatedby)
                </th>
                <th >
                    @Html.DisplayNameFor(model => model.Owner.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner.Department)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OwnerList )
            {
            <tr>
                 <td>
                    <input type="checkbox" name="selectedIds" id="select-all-checkbox" class="green-checkbox" value="@item.OwnerCode" />
                </td>
                <td></td>
                <td>
                    <a asp-action="Index" asp-route-id="@item.OwnerCode"><span class="bi bi-pen"></span></a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OwnerCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OwnerFullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location.Description)
                </td>
                <td>
                                @Html.DisplayFor(modelItem => item.Store.StoreName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateUpdated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Createdby.UserFullName)
                </td>
                <td>
                        @Html.DisplayFor(modelItem => item.Updatedby.UserFullName)
                </td>
                    <td >
                    @Html.DisplayFor(modelItem => item.Status.status_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department.Dept_name)
                </td>
            </tr>
    }
        </tbody>
    </table>
</form>




<script>
    const selectAllCheckbox = document.getElementById("select-all-checkbox");
    const checkboxes = document.querySelectorAll('input[type="checkbox"][name="selectedIds"]');

    selectAllCheckbox.addEventListener("change", function () {
        for (let i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = selectAllCheckbox.checked;
        }
    });



    //FILTERING

    $(document).ready(function () {
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>

