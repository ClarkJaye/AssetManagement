@model IEnumerable<AssetManagement.Models.MonitorDetail>

@{
    ViewData["Title"] = "Index";
}

<div class="m-4">
    <h4>Monitor Inventory Details</h4>
    @if (TempData["Welcome"] != null)
    {
        <p>@TempData["Welcome"]</p>
    }

    <!-- Action Buttons -->
    <div class="d-flex align-items-center gap-2 mb-4 ">
        <div class="d-flex align-items-center gap-2">
            <a class="btn btn-theme" asp-action="Create">
                <i class="fas fa-pencil-alt"></i>
                <span>Add New</span>
            </a>

            <a class="btn btn-outline-secondary" asp-controller="MonitorInventories" asp-action="Index">
                <i class="fas fa-undo"></i>
                <span>Back to Inventory</span>
            </a>
        </div>
    </div>

    <hr />

    <div class="card shadow-sm card-selected">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-datatable">
                    <thead>
                        <tr>
                            <th>
                                MONITOR CODE
                            </th>
                            <th>
                                SERIAL NUMBER
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PO)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Price)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Vendor)
                            </th>
                            <th>
                                SERVICES YEARS
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PurchaseDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DeployedDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th>
                                CREATED AT
                            </th>                        
                            <th>
                                @Html.DisplayNameFor(model => model.Createdby)
                            </th>
                            <th>
                                UPDATED AT
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Updatedby)
                            </th>
                            <th style="text-align: center!important">ACTION</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MonitorInventory.monitorCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SerialNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PO)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Vendor.VendorName)
                                </td>
                                <td>
                                    @{
                                        if (item.PurchaseDate != null)
                                        {
                                            var purchaseDate = item.PurchaseDate.Value;
                                            var now = DateTime.Now;

                                            var totalDays = (now - purchaseDate).Days;

                                            var years = now.Year - purchaseDate.Year;
                                            var months = now.Month - purchaseDate.Month;
                                            var days = now.Day - purchaseDate.Day;

                                            if (days < 0)
                                            {
                                                months--;
                                                days += DateTime.DaysInMonth(now.Year, now.AddMonths(-1).Month);
                                            }

                                            if (months < 0)
                                            {
                                                years--;
                                                months += 12;
                                            }

                                            if (years > 0)
                                            {
                                                <span>@years year(s), @months month(s), @days day(s)</span>
                                            }
                                            else if (months > 0)
                                            {
                                                <span>@months month(s), @days day(s)</span>
                                            }
                                            else
                                            {
                                                <span>@days day(s)</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>N/A</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @item.PurchaseDate?.ToString("MMM dd yy hh:mm tt")
                                </td>
                                <td>
                                    @item.DeployedDate?.ToString("MMM dd yy hh:mm tt")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Status.status_name)
                                </td>
                                <td>
                                    @item.DateCreated.ToString("MMM dd yy hh:mm tt")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Createdby.UserCode)
                                </td>
                                <td>
                                    @item.DateUpdated?.ToString("MMM dd yy hh:mm tt")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Updatedby.UserCode)
                                </td>
                                <td>
                                    <div class="d-flex align-items-center gap-3">
                                        <a class="btn btn-outline-secondary"
                                           asp-action="Details"
                                           asp-route-code="@item.monitorCode"
                                           asp-route-serial="@item.SerialNumber">
                                            Details
                                        </a>
                                        |
                                        <a class="btn btn-outline-primary"
                                           asp-action="Edit"
                                           asp-route-code="@item.monitorCode"
                                           asp-route-serial="@item.SerialNumber">
                                            Edit
                                        </a>
                                        |
                                        <button class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">Delete</button>

                                        <form method="post" asp-action="Delete" asp-controller="MonitorDetails" asp-route-code="@item.monitorCode" asp-route-serial="@item.SerialNumber">
                                            <!-- Modal -->
                                            <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            Are you sure you want to delete the selected item(s)?
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                            <button type="submit" class="btn btn-danger">Delete</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}
@if (TempData["ErrorNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Error',
                text: '@TempData["ErrorNotification"]',
                icon: 'error',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}
