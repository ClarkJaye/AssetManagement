@model IEnumerable<AssetManagement.Models.DesktopAllocation>

@{
    ViewData["Title"] = "Index";
}

<h2>Deleted Items</h2>

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Chivo:wght@300;400;500;700&display=swap" />

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18"></script>



<style>

    *,
    *::before,
    *::after {
        box-sizing: border-box;
        -webkit-box-sizing: border-box;
    }


    body {
        font-family: 'Chivo', sans-serif;
        margin: 0;
        padding: 10px;
        overflow: hidden;
    }

    /* Add this CSS to adjust the top margin of the layout container */
    .container {
        margin-top: 70px; /* Adjust this value according to your navbar height */
    }

    td {
        cursor: pointer;
    }
</style>

<p>
    <a class="btn btn-sm bg-secondary h5 text-white text-decoration-none p-2 btn createbtn" asp-action="Index">Back</a>
</p>


<input type="text" id="filterInput" placeholder="Search...">

<form method="post" action="@Url.Action("DeleteAsEdit", "DesktopAllocations")">
    <!-- Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the selected item(s)?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
    <div class="table-container">
        <table class="table custom-fontsize p-4 ">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>PO</th>
                    <th>
                        @Html.DisplayNameFor(model => model.FixedassetTag)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DesktopInventoryDetail)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ComputerName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Owner)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateDeployed)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateCreated)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateUpdated)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                        DESKTOP CODE
                    </th>
                    <th>
                       CREATED BY
                    </th>
                    <th>
                        UPDATED BY
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.AllocId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DesktopInventoryDetail.PO)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DesktopInventoryDetail.unitTag)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FixedassetTag)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ComputerName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Owner.OwnerCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateDeployed)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateCreated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateUpdated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.status_name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DesktopInventory.desktopInvCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Createdby.UserCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Updatedby.UserCode)
                        </td>
                        @*<td>
                    <a class="btn btn-sm bg-secondary  text-white custom-fontsize editbtn" asp-action="Create" asp-controller="ReturnLTAs" asp-route-id="@item.AllocId">Return </a>
                    </td>*@
                    </tr>
                }
            </tbody>
        </table>
    </div>

</form>

@if (TempData["ErrorMessage"] != null)
{
    <script>
        alert('@TempData["ErrorMessage"]');
    </script>
}

<div class="displaytable"> </div>

@if (TempData["SuccessNotification"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Success',
                text: '@TempData["SuccessNotification"]',
                icon: 'success',
                timer: 3000, // Automatically close the notification after 3 seconds
                showConfirmButton: false
            });
        });
    </script>
}

<script>
    const selectAllCheckbox = document.getElementById("select-all-checkbox");

    const checkboxes = document.querySelectorAll('input[type="checkbox"][name="selectedIds"]');



    selectAllCheckbox.addEventListener("change", function () {

        for (let i = 0; i < checkboxes.length; i++) {

            checkboxes[i].checked = selectAllCheckbox.checked;

        }
    });
    //FILTERING

    $(document).ready(function () {
        $('#filterInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });


        //MODAL


</script>