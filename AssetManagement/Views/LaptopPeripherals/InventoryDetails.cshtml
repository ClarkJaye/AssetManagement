@model IEnumerable<AssetManagement.Models.LaptopPeripheralAllocation>

@{
    ViewData["Title"] = "Index";
}



<div class="m-4 mt-2">
    <div class="mb-2">
        <a class="btn btn-sm btn-outline-secondary" asp-action="Index">
            <span class="fas fa-undo"></span> Back to List
        </a>
    </div>

    <div class="allocation-details">
        <h4 class="allocation-title">Laptop Peripheral Allocation Details for ID: @ViewBag.Id</h4>
        <h5 class="allocation-description">Description: @ViewBag.Ids</h5>
    </div>
    <div class="galloon">
        <div class="d-flex align-items-center gap-3 mb-4">
            <a class="btn btn-sm btn-secondary" id="ltpFirstBtn" name="userCODE">First Owner</a>
            <a class="btn btn-sm btn-outline-secondary" id="ltpSecondBtn" name="userCODE">Show Second Owner</a>
            <a class="btn btn-sm btn-outline-secondary" id="ltpReturnBtn" name="userCODE">Return Details </a>
        </div>
    </div>


    <div class="card shadow-sm card-selected">
        <div class="card-body pt-0">
            <div class="table-responsive mt-4 table-render" style="max-height: 600px;">
                <h4>First Owner Allocation</h4>
                <div class="table-responsive">
                    <table class="table table-striped table-datatable">
                        <thead>
                            <tr>
                                <th>
                                    DESCRIPTION
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.LaptopPeripheral)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.SerialNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FixedAssetTag)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DatePurchased)
                                </th>
                                <th>
                                    SERVICE YEARS
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PONumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Owner)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PeripheralAllocCreatedAt)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CreatedBy)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PeripheralAllocUpdateAt)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UpdatedBy)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LaptopPeripheral.PeripheralDescription)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LaptopPeripheral.PeripheralCode)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SerialNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FixedAssetTag)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DatePurchased)
                                    </td>
                                    <td>

                                        @{
                                            if (item.DatePurchased != null)
                                            {
                                                var purchaseDate = item.DatePurchased.Value;
                                                var now = DateTime.Now;

                                                var totalDays = (now - purchaseDate).Days;

                                                var years = now.Year - purchaseDate.Year;
                                                var months = now.Month - purchaseDate.Month;
                                                var days = now.Day - purchaseDate.Day;

                                                if (days < 0)
                                                {
                                                    months--;
                                                    days += DateTime.DaysInMonth(now.Year, now.AddMonths(-1).Month);
                                                }

                                                if (months < 0)
                                                {
                                                    years--;
                                                    months += 12;
                                                }

                                                if (years > 0)
                                                {
                                                    <span>@years year(s), @months month(s), @days day(s)</span>
                                                }
                                                else if (months > 0)
                                                {
                                                    <span>@months month(s), @days day(s)</span>
                                                }
                                                else
                                                {
                                                    <span>@days day(s)</span>
                                                }
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PONumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Owner.OwnerCode)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Status.status_code)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PeripheralAllocCreatedAt)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreatedBy.UserCode)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PeripheralAllocUpdateAt)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UpdatedBy.UserCode)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $(".galloon").on("click", "#ltpFirstBtn", function () {
            location.reload();
        });

        $(document).on("click", "#ltpSecondBtn", function () {
            var userCode = "@ViewBag.Id";

            $.ajax({
                url: "@Url.Action("SecOwnerPeripDetails", "LaptopPeripherals")",
                type: "GET",
                data: { userCODE: userCode },
                success: function (res) {
                    $(".table-render").html(res);
                    InitializeDataTable();
                }
            });

            $(this).removeClass("btn-outline-secondary").addClass("btn-secondary");
            $(".galloon .btn").not(this).removeClass("btn-secondary").addClass("btn-outline-secondary");
        });

        $(document).on("click", "#ltpReturnBtn", function () {
            var userCode = "@ViewBag.Id";
            $.ajax({
                url: "@Url.Action("ReturnDetails", "LaptopPeripherals")",
                type: "GET",
                data: { userCODE: userCode },
                success: function (res) {
                    $(".table-render").html(res);
                    InitializeDataTable();
                }
            });
            $(this).removeClass("btn-outline-secondary").addClass("btn-secondary");
            $(".galloon .btn").not(this).removeClass("btn-secondary").addClass("btn-outline-secondary");
        });

    });

    // Function to destroy and re-initialize DataTable
    function InitializeDataTable() {
        // Re-initialize the DataTable
        $('.table-datatable').DataTable({
            paging: true,
            lengthChange: true,
            searching: true,
            ordering: true,
            info: true,
            autoWidth: false,
            responsive: true,
            columnDefs: [{ targets: [0], orderable: false }],
            language: {
                paginate: {
                    previous: "Previous",
                    next: "Next"
                }
            },
            deferLoading: true
        });
    }
</script>

